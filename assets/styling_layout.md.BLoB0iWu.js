import{_ as e,c as i,o as s,aj as a}from"./chunks/framework.D1pnFkAx.js";const k=JSON.parse('{"title":"Layout","description":"","frontmatter":{},"headers":[],"relativePath":"styling/layout.md","filePath":"styling/layout.md"}'),d={name:"styling/layout.md"};function o(l,t,n,h,r,c){return s(),i("div",null,t[0]||(t[0]=[a(`<h1 id="layout" tabindex="-1">Layout <a class="header-anchor" href="#layout" aria-label="Permalink to “Layout”">​</a></h1><p>This guide covers utilities for controlling the layout of your site, including display, positioning, z-index, and overflow.</p><h2 id="display" tabindex="-1">Display <a class="header-anchor" href="#display" aria-label="Permalink to “Display”">​</a></h2><p>The display utilities allow you to control the <code>display</code> property of an element, which is fundamental to how it behaves in the layout.</p><table tabindex="0"><thead><tr><th>Class</th><th>CSS</th><th>Use Case</th></tr></thead><tbody><tr><td><code>is-hidden</code></td><td><code>display: none;</code></td><td>Completely removes the element from the page.</td></tr><tr><td><code>is-block</code></td><td><code>display: block;</code></td><td>The element starts on a new line and takes up the full width available.</td></tr><tr><td><code>is-inline</code></td><td><code>display: inline;</code></td><td>The element does not start on a new line and only takes up as much width as necessary.</td></tr><tr><td><code>is-inline-block</code></td><td><code>display: inline-block;</code></td><td>Like <code>inline</code>, but you can set a width and height on the element.</td></tr><tr><td><code>is-flex</code></td><td><code>display: flex;</code></td><td>Enables flexbox layout. See the Flexbox guide for more details.</td></tr><tr><td><code>is-inline-flex</code></td><td><code>display: inline-flex;</code></td><td>An inline-level version of flexbox.</td></tr></tbody></table><p><strong>Example:</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- Hide an element by default, but show it on medium screens --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;is-hidden md:is-block&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="positioning" tabindex="-1">Positioning <a class="header-anchor" href="#positioning" aria-label="Permalink to “Positioning”">​</a></h2><p>Control how an element is positioned within the document or its parent.</p><table tabindex="0"><thead><tr><th>Class</th><th>CSS</th><th>Use Case</th></tr></thead><tbody><tr><td><code>is-relative</code></td><td><code>position: relative;</code></td><td>The element is positioned according to the normal flow of the document. Required for <code>absolute</code> positioning of children.</td></tr><tr><td><code>is-absolute</code></td><td><code>position: absolute;</code></td><td>The element is removed from the normal flow and positioned relative to its nearest positioned ancestor.</td></tr><tr><td><code>is-fixed</code></td><td><code>position: fixed;</code></td><td>The element is positioned relative to the viewport, meaning it always stays in the same place even if the page is scrolled.</td></tr><tr><td><code>is-sticky</code></td><td><code>position: sticky;</code></td><td>A hybrid of <code>relative</code> and <code>fixed</code>. It&#39;s treated as <code>relative</code> until it crosses a specified threshold, at which point it becomes <code>fixed</code>.</td></tr><tr><td><code>is-nav</code></td><td><code>position: sticky; top: 0; z-index: 999;</code></td><td>A pre-built utility for creating sticky navigation bars.</td></tr></tbody></table><h3 id="placement" tabindex="-1">Placement <a class="header-anchor" href="#placement" aria-label="Permalink to “Placement”">​</a></h3><p>These utilities are used with <code>absolute</code>, <code>fixed</code>, or <code>sticky</code> positioned elements to place them on the page.</p><table tabindex="0"><thead><tr><th>Class</th><th>CSS</th></tr></thead><tbody><tr><td><code>is-top-0</code></td><td><code>top: 0;</code></td></tr><tr><td><code>is-bottom-0</code></td><td><code>bottom: 0;</code></td></tr><tr><td><code>is-left-0</code></td><td><code>left: 0;</code></td></tr><tr><td><code>is-right-0</code></td><td><code>right: 0;</code></td></tr></tbody></table><p><strong>Example:</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- A close button in the top-right corner of a card --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;is-relative is-p-4&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;is-absolute is-top-0 is-right-0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;X&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Card content...&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">p</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="z-index" tabindex="-1">Z-Index <a class="header-anchor" href="#z-index" aria-label="Permalink to “Z-Index”">​</a></h3><p>Control the stacking order of positioned elements.</p><table tabindex="0"><thead><tr><th>Class</th><th>CSS</th></tr></thead><tbody><tr><td><code>is-z-0</code></td><td><code>z-index: 0;</code></td></tr><tr><td><code>is-z-50</code></td><td><code>z-index: 50;</code></td></tr><tr><td><code>is-z-100</code></td><td><code>z-index: 100;</code></td></tr></tbody></table><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>Arbitrary values are supported for z-index: <code>is-z-[999]</code></p></div><h2 id="overflow" tabindex="-1">Overflow <a class="header-anchor" href="#overflow" aria-label="Permalink to “Overflow”">​</a></h2><p>Control how content that overflows an element&#39;s box is handled.</p><table tabindex="0"><thead><tr><th>Class</th><th>CSS</th><th>Use Case</th></tr></thead><tbody><tr><td><code>is-overflow-auto</code></td><td><code>overflow: auto;</code></td><td>Adds scrollbars only when content overflows.</td></tr><tr><td><code>is-overflow-hidden</code></td><td><code>overflow: hidden;</code></td><td>Clips the overflowing content. It is not visible.</td></tr><tr><td><code>is-overflow-visible</code></td><td><code>overflow: visible;</code></td><td>The overflowing content is rendered outside the element&#39;s box. (Default)</td></tr><tr><td><code>is-overflow-scroll</code></td><td><code>overflow: scroll;</code></td><td>Always shows scrollbars, even if content does not overflow.</td></tr><tr><td><code>is-overflow-x-scroll</code></td><td><code>overflow-x: scroll;</code></td><td>Enables horizontal scrolling.</td></tr><tr><td><code>is-overflow-y-scroll</code></td><td><code>overflow-y: scroll;</code></td><td>Enables vertical scrolling.</td></tr></tbody></table><h2 id="aspect-ratio" tabindex="-1">Aspect Ratio <a class="header-anchor" href="#aspect-ratio" aria-label="Permalink to “Aspect Ratio”">​</a></h2><p>Control the aspect ratio of an element.</p><table tabindex="0"><thead><tr><th>Class</th><th>CSS</th><th>Use Case</th></tr></thead><tbody><tr><td><code>is-aspect-auto</code></td><td><code>aspect-ratio: auto;</code></td><td>The browser calculates the aspect ratio.</td></tr><tr><td><code>is-aspect-square</code></td><td><code>aspect-ratio: 1 / 1;</code></td><td>Creates a perfect square.</td></tr><tr><td><code>is-aspect-video</code></td><td><code>aspect-ratio: 16 / 9;</code></td><td>Creates a 16:9 video container.</td></tr></tbody></table><p><strong>Example:</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- A responsive video embed --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;is-aspect-video&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">iframe</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;...&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;is-w-full is-h-full&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">iframe</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div>`,27)]))}const g=e(d,[["render",o]]);export{k as __pageData,g as default};
