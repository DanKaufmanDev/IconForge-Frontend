import{_ as i,c as e,o as s,aj as a}from"./chunks/framework.D1pnFkAx.js";const k=JSON.parse('{"title":"Interactivity & Animations","description":"","frontmatter":{},"headers":[],"relativePath":"styling/interactivity.md","filePath":"styling/interactivity.md"}'),n={name:"styling/interactivity.md"};function d(r,t,o,l,h,c){return s(),e("div",null,t[0]||(t[0]=[a(`<h1 id="interactivity-animations" tabindex="-1">Interactivity &amp; Animations <a class="header-anchor" href="#interactivity-animations" aria-label="Permalink to “Interactivity &amp; Animations”">​</a></h1><p>This guide covers utilities that control how users interact with elements and how those elements animate, including cursors, transitions, and keyframe animations.</p><h2 id="interactivity" tabindex="-1">Interactivity <a class="header-anchor" href="#interactivity" aria-label="Permalink to “Interactivity”">​</a></h2><h3 id="cursor" tabindex="-1">Cursor <a class="header-anchor" href="#cursor" aria-label="Permalink to “Cursor”">​</a></h3><p>Control the mouse cursor style when hovering over an element to provide visual feedback.</p><table tabindex="0"><thead><tr><th>Class</th><th>CSS</th><th>Use Case</th></tr></thead><tbody><tr><td><code>is-clickable</code></td><td><code>cursor: pointer;</code></td><td>Indicates that an element is clickable, like a button or link.</td></tr><tr><td><code>is-not-clickable</code></td><td><code>cursor: not-allowed;</code></td><td>Indicates that an action is disabled or not permitted.</td></tr></tbody></table><h3 id="user-select" tabindex="-1">User Select <a class="header-anchor" href="#user-select" aria-label="Permalink to “User Select”">​</a></h3><p>Control whether the user can select the text in an element.</p><table tabindex="0"><thead><tr><th>Class</th><th>CSS</th></tr></thead><tbody><tr><td><code>is-select-none</code></td><td><code>user-select: none;</code></td></tr><tr><td><code>is-select-text</code></td><td><code>user-select: text;</code></td></tr><tr><td><code>is-select-all</code></td><td><code>user-select: all;</code></td></tr><tr><td><code>is-select-auto</code></td><td><code>user-select: auto;</code></td></tr></tbody></table><h3 id="resize" tabindex="-1">Resize <a class="header-anchor" href="#resize" aria-label="Permalink to “Resize”">​</a></h3><p>Control whether an element is resizable by the user.</p><table tabindex="0"><thead><tr><th>Class</th><th>CSS</th></tr></thead><tbody><tr><td><code>is-resize-none</code></td><td><code>resize: none;</code></td></tr><tr><td><code>is-resize-y</code></td><td><code>resize: vertical;</code></td></tr><tr><td><code>is-resize-x</code></td><td><code>resize: horizontal;</code></td></tr></tbody></table><h2 id="transitions" tabindex="-1">Transitions <a class="header-anchor" href="#transitions" aria-label="Permalink to “Transitions”">​</a></h2><p>Apply smooth transitions to property changes, often used with state prefixes like <code>hover:</code>.</p><table tabindex="0"><thead><tr><th>Class</th><th>CSS</th><th>Use Case</th></tr></thead><tbody><tr><td><code>is-transition</code></td><td><code>transition: all 0.2s ease-in-out;</code></td><td>Default transition for most interactive elements.</td></tr><tr><td><code>is-transition-fast</code></td><td><code>transition: all 0.1s ease-in-out;</code></td><td>For quick, subtle feedback.</td></tr><tr><td><code>is-transition-slow</code></td><td><code>transition: all 0.5s ease-in-out;</code></td><td>For more pronounced, deliberate transitions.</td></tr></tbody></table><p><strong>Example:</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;is-transition hover:is-bg-blue-6&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  Hover me for a smooth color change.</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">button</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="animations" tabindex="-1">Animations <a class="header-anchor" href="#animations" aria-label="Permalink to “Animations”">​</a></h2><p>Use keyframe animations to create complex, continuous, or triggered animations.</p><table tabindex="0"><thead><tr><th>Class</th><th>Description</th></tr></thead><tbody><tr><td><code>is-anim-pulse</code></td><td>Fades in and out. Good for notification badges.</td></tr><tr><td><code>is-anim-blink</code></td><td>Blinks on and off.</td></tr><tr><td><code>is-anim-ping</code></td><td>A pulse that scales outwards, like a radar ping.</td></tr><tr><td><code>is-anim-spin</code></td><td>Spins continuously. Perfect for loading indicators.</td></tr><tr><td><code>is-anim-bounce</code></td><td>Bounces up and down.</td></tr><tr><td><code>is-anim-shake</code></td><td>Shakes horizontally. Good for error states.</td></tr><tr><td><code>is-anim-wiggle</code></td><td>Wiggles from side to side.</td></tr><tr><td><code>is-anim-flip</code></td><td>A 3D flip animation.</td></tr><tr><td><code>is-anim-pop</code></td><td>A quick, one-time pop effect.</td></tr><tr><td><code>is-anim-flicker</code></td><td>Flickers like a neon sign.</td></tr><tr><td><code>is-anim-drift</code></td><td>Drifts slowly and fades.</td></tr></tbody></table><p><strong>Example:</strong></p><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark" style="--shiki-light:#24292e;--shiki-dark:#e1e4e8;--shiki-light-bg:#fff;--shiki-dark-bg:#24292e;" tabindex="0" dir="ltr"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- A spinning loading icon --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;if-spinner is-anim-spin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">i</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!-- An input field that shakes on error --&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;input if-warningtri is-anim-shake&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span></code></pre></div>`,22)]))}const g=i(n,[["render",d]]);export{k as __pageData,g as default};
